{"version":3,"sources":["assets/empty.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","Loader","error","map","movie","key","original_title","poster_path","vote_average","release_date","Date","getFullYear","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","TVApi","topRated","airingToday","showDetail","HomeContainer","state","loading","data","results","console","log","this","setState","React","Component","TVPresenter","tv","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","name","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresneter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","DetailPresenter","path","exact","component","Home","TV","Search","Detail","from","GlobalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0bbe3984.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/empty.793cf611.png\";","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0px 10px;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 5px solid\r\n    ${props => (props.current ? \"#1B9CFC\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">Tv</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 15px;\r\n  /* font-weight: 600; */\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      Loading..\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.3s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.3s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/empty.png\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ★\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 15 ? `${title.substring(0, 15)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.string,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 10px;\r\n  padding-top: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, Loader, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title> Movies | Willfilx </title>\r\n    </Helmet>\r\n    {Loader ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title> Movies | Willfilx </title>\r\n        </Helmet>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={\r\n                  movie.release_date &&\r\n                  new Date().getFullYear(movie.release_date)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming\">\r\n            {upcoming.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={\r\n                  movie.release_date &&\r\n                  new Date().getFullYear(movie.release_date)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular\">\r\n            {popular.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={\r\n                  movie.release_date &&\r\n                  new Date().getFullYear(movie.release_date)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"#70a1ff\" />}\r\n      </Container>\r\n    )}\r\n    ;\r\n  </>\r\n);\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  Loader: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"2014b2a853ddb0b466607198d962d799\",\r\n    language: \"en-US\"\r\n  }\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: id =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(`search/movie`, {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n\r\nexport const TVApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: id =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(`search/tv`, {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying }\r\n      } = await moviesApi.nowPlaying();\r\n      console.log(\r\n        \"TCL: extends -> componentDidMount -> nowPlaying\",\r\n        nowPlaying\r\n      );\r\n      const {\r\n        data: { results: upcoming }\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular }\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't get Moives information.\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    // console.log(\"TCL: extends -> render -> this.state\", this.state);\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0 10px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title> TV | Willfilx </title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated\">\r\n            {topRated.map(tv => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={\r\n                  tv.first_air_date && new Date().getFullYear(tv.first_air_date)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular\">\r\n            {popular.map(tv => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={\r\n                  tv.first_air_date && new Date().getFullYear(tv.first_air_date)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map(tv => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={\r\n                  tv.first_air_date && new Date().getFullYear(tv.first_air_date)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"#70a1ff\" />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { TVApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated }\r\n      } = await TVApi.topRated();\r\n      const {\r\n        data: { results: popular }\r\n      } = await TVApi.popular();\r\n      const {\r\n        data: { results: airingToday }\r\n      } = await TVApi.airingToday();\r\n      this.setState({ topRated, popular, airingToday });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information.\"\r\n      });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    // console.log(\"TCL: extends -> render -> this.state\", this.state);\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  loading,\r\n  handleSubmit,\r\n  error,\r\n  updateTerm\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Willfilx</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Show...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      ></Input>\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={\r\n                  movie.release_date &&\r\n                  new Date().getFullYear(movie.release_date)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Results\">\r\n            {tvResults.map(tv => (\r\n              <span key={tv.id}>{tv.name}</span>\r\n            ))}\r\n          </Section>\r\n        )}\r\n      </>\r\n    )}\r\n    {error && <Message text={error} color=\"#70a1ff\" />}\r\n    {tvResults &&\r\n      movieResults &&\r\n      tvResults.length === 0 &&\r\n      movieResults.length === 0 && (\r\n        <Message text={`Nothing found`} color=\"#a4b0be\" />\r\n      )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  handleSumbit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, TVApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") this.searchByTerm();\r\n  };\r\n\r\n  updateTerm = event => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults }\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults }\r\n      } = await TVApi.search(searchTerm);\r\n      this.setState({ movieResults, tvResults });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        loading={loading}\r\n        error={error}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(2.5px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  width: 30%;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 30px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 5px 0 15px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 20px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  color: white;\r\n  line-height: 1.3;\r\n`;\r\n\r\nconst DetailPresneter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title> Loading | Willfilx </title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Willfilx\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/empty.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>◈</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>◈</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresneter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  erro: PropTypes.string\r\n};\r\n\r\nexport default DetailPresneter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, TVApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname }\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push },\r\n      location: { pathname }\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) return push(\"/\");\r\n    let result = null;\r\n    // const test = await moviesApi.movieDetail(parsedId);\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await TVApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    console.log(\"TCL: extends -> render -> result\", result);\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport Home from \"../Routes/Home\";\r\nimport TV from \"../Routes/TV\";\r\nimport Search from \"../Routes/Search\";\r\nimport Detail from \"../Routes/Detail\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" exact component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/tv/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  ${reset};\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: inherit; \r\n  }\r\n  body {\r\n    font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    font-size:14px;\r\n    background-color: rgba(20,20,20,1);\r\n    color:white;\r\n    padding-top:50px;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React, { Component } from \"react\";\nimport Router from \"./Router\";\nimport GlobalStyles from \"./GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}