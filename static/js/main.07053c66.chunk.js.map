{"version":3,"sources":["assets/empty.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/HomeContainer.js","Routes/Home/index.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","location","pathname","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Loader","map","movie","key","original_title","poster_path","vote_average","release_date","Date","getFullYear","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","TVApi","HomeContainer","React","Component","state","componentDidMount","data","results","console","log","setState","render","this","TVPresenter","topRated","airingToday","tv","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","name","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresneter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","overview","DetailContainer","constructor","super","includes","match","push","history","parsedId","parseInt","isNaN","DetailPresenter","path","exact","component","Home","TV","Search","Detail","from","GlobalStyles","createGlobalStyle","reset","App","Router","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.07053c66.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/empty.793cf611.png\";","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0px 10px;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 5px solid\r\n    ${props => (props.current ? \"#1B9CFC\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">Tv</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 15px;\r\n  /* font-weight: 600; */\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      Loading..\r\n    </span>\r\n  </Container>\r\n);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.3s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.3s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/tv/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/empty.png\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ★\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 15 ? `${title.substring(0, 15)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.string,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 10px;\r\n  padding-top: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title> Movies | Willfilx </title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title> Movies | Willfilx </title>\r\n        </Helmet>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={\r\n                  movie.release_date &&\r\n                  new Date().getFullYear(movie.release_date)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming\">\r\n            {upcoming.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={\r\n                  movie.release_date &&\r\n                  new Date().getFullYear(movie.release_date)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular\">\r\n            {popular.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={\r\n                  movie.release_date &&\r\n                  new Date().getFullYear(movie.release_date)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"#70a1ff\" />}\r\n      </Container>\r\n    )}\r\n    ;\r\n  </>\r\n);\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  Loader: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"2014b2a853ddb0b466607198d962d799\",\r\n    language: \"en-US\"\r\n  }\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: id =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(`search/movie`, {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n\r\nexport const TVApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: id =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\"\r\n      }\r\n    }),\r\n  search: term =>\r\n    api.get(`search/tv`, {\r\n      params: {\r\n        query: encodeURIComponent(term)\r\n      }\r\n    })\r\n};\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      console.log(\r\n        \"TCL: extends -> componentDidMount -> nowPlaying\",\r\n        nowPlaying\r\n      );\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't get Moives information.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    // console.log(\"TCL: extends -> render -> this.state\", this.state);\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Helmet from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0 10px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title> TV | Willfilx </title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated\">\r\n            {topRated.map(tv => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={\r\n                  tv.first_air_date && new Date().getFullYear(tv.first_air_date)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular\">\r\n            {popular.map(tv => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={\r\n                  tv.first_air_date && new Date().getFullYear(tv.first_air_date)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map(tv => (\r\n              <Poster\r\n                key={tv.id}\r\n                id={tv.id}\r\n                title={tv.original_name}\r\n                imageUrl={tv.poster_path}\r\n                rating={tv.vote_average}\r\n                year={\r\n                  tv.first_air_date && new Date().getFullYear(tv.first_air_date)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message text={error} color=\"#70a1ff\" />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { TVApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated }\r\n      } = await TVApi.topRated();\r\n      const {\r\n        data: { results: popular }\r\n      } = await TVApi.popular();\r\n      const {\r\n        data: { results: airingToday }\r\n      } = await TVApi.airingToday();\r\n      this.setState({ topRated, popular, airingToday });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information.\"\r\n      });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    // console.log(\"TCL: extends -> render -> this.state\", this.state);\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  loading,\r\n  handleSubmit,\r\n  error,\r\n  updateTerm\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Willfilx</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Show...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      ></Input>\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.title}\r\n                imageUrl={movie.poster_path}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={\r\n                  movie.release_date &&\r\n                  new Date().getFullYear(movie.release_date)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Results\">\r\n            {tvResults.map(tv => (\r\n              <span key={tv.id}>{tv.name}</span>\r\n            ))}\r\n          </Section>\r\n        )}\r\n      </>\r\n    )}\r\n    {error && <Message text={error} color=\"#70a1ff\" />}\r\n    {tvResults &&\r\n      movieResults &&\r\n      tvResults.length === 0 &&\r\n      movieResults.length === 0 && (\r\n        <Message text={`Nothing found`} color=\"#a4b0be\" />\r\n      )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  handleSumbit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, TVApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") this.searchByTerm();\r\n  };\r\n\r\n  updateTerm = event => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults }\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults }\r\n      } = await TVApi.search(searchTerm);\r\n      this.setState({ movieResults, tvResults });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        loading={loading}\r\n        error={error}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(2.5px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  width: 30%;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 30px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 5px 0 15px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 20px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  color: white;\r\n  line-height: 1.3;\r\n`;\r\n\r\nconst DetailPresneter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title> Loading | Willfilx </title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Willfilx\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/empty.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>◈</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>◈</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresneter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  erro: PropTypes.string\r\n};\r\n\r\nexport default DetailPresneter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, TVApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) return push(\"/\");\r\n    let result = null;\r\n    // const test = await moviesApi.movieDetail(parsedId);\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await TVApi.showDetail(parsedId));\r\n      }\r\n    } catch (error) {\r\n      this.setState({ error: \"Can't find anything\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    console.log(\"TCL: extends -> render -> result\", result);\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport Home from \"../Routes/Home\";\r\nimport TV from \"../Routes/TV\";\r\nimport Search from \"../Routes/Search\";\r\nimport Detail from \"../Routes/Detail\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" exact component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/tv/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  ${reset};\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: inherit; \r\n  }\r\n  body {\r\n    font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    font-size:14px;\r\n    background-color: rgba(20,20,20,1);\r\n    color:white;\r\n    padding-top:50px;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React, { Component } from \"react\";\r\nimport Router from \"./Router\";\r\nimport GlobalStyles from \"./GlobalStyles\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Router />\r\n        <GlobalStyles />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}